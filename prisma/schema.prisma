generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  email     String   @unique
  name      String?
  role      Role     @default(USER)
  posts     Post[]
}

model Post {
  id        Int         @id @default(autoincrement())
  published Boolean     @default(false)
  title     String      @db.VarChar(255)
  authorId  Int?
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  author    User?       @relation(fields: [authorId], references: [id])
  postStats PostStats[]
}

model PostStats {
  id        Int      @id @default(autoincrement())
  postId    Int
  totalRead Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  post      Post     @relation(fields: [postId], references: [id])
}

model userdevice {
  id                   Int     @id @default(autoincrement())
  devicetype           String  @db.VarChar
  newAddedColumn       String? @db.VarChar
  newNewAddedColumn    String? @db.VarChar
  newNewTwoAddedColumn String? @db.VarChar
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model newtableexisting {
  id                 Int     @default(autoincrement())
  name               String? @db.VarChar
  addNewColumnAgain  String? @db.VarChar

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model newtableexistingnew {
  id Int @default(autoincrement())

  @@ignore
}

enum Role {
  USER
  ADMIN
}
